
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  userId      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([userId])
  @@index([status])
  @@map("tasks")
}

enum EmailStatus {
  PENDING
  SENT
  FAILED
}

model EmailLog {
  id        String      @id @default(uuid())
  to        String
  subject   String
  body      String
  status    EmailStatus @default(PENDING)
  error     String?
  sentAt    DateTime?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([status])
  @@map("email_logs")
}
model EmailTemplate {
  id        String    @id @default(uuid())
  subject   String
  body      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  emailType EmailType
  createdBy String
  updatedBy String
  @@map("email_templates")
}

enum EmailType {
  TASK_CREATED
  TASK_UPDATED
  TASK_DELETED
  SUMMARY_TASKS_DAILY
}

model ApiKey {
  id        String    @id @default(uuid())
  key       String    @unique
  name      String
  userId    String
  expiresAt DateTime?
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([key])
  @@index([userId])
  @@map("api_keys")
}
